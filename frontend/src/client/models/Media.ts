/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Content } from './Content';
import {
    ContentFromJSON,
    ContentFromJSONTyped,
    ContentToJSON,
} from './Content';

/**
 * 
 * @export
 * @interface Media
 */
export interface Media {
    /**
     * 
     * @type {Array<Content>}
     * @memberof Media
     */
    contents: Array<Content>;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    link: string;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    title: string;
    /**
     * 
     * @type {number}
     * @memberof Media
     */
    bangumiId: number | null;
    /**
     * 
     * @type {number}
     * @memberof Media
     */
    season: number;
}

/**
 * Check if a given object implements the Media interface.
 */
export function instanceOfMedia(value: object): boolean {
    if (!('contents' in value)) return false;
    if (!('id' in value)) return false;
    if (!('link' in value)) return false;
    if (!('title' in value)) return false;
    if (!('bangumiId' in value)) return false;
    if (!('season' in value)) return false;
    return true;
}

export function MediaFromJSON(json: any): Media {
    return MediaFromJSONTyped(json, false);
}

export function MediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Media {
    if (json == null) {
        return json;
    }
    return {
        
        'contents': ((json['contents'] as Array<any>).map(ContentFromJSON)),
        'id': json['id'],
        'link': json['link'],
        'title': json['title'],
        'bangumiId': json['bangumi_id'],
        'season': json['season'],
    };
}

export function MediaToJSON(value?: Media | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'contents': ((value['contents'] as Array<any>).map(ContentToJSON)),
        'id': value['id'],
        'link': value['link'],
        'title': value['title'],
        'bangumi_id': value['bangumiId'],
        'season': value['season'],
    };
}

