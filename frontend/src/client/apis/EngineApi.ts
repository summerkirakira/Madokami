/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  InfoMessage,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    InfoMessageFromJSON,
    InfoMessageToJSON,
} from '../models/index';

export interface RunEngineV1EngineRunGetRequest {
    engineNamespace: string;
    xToken: string;
}

/**
 * 
 */
export class EngineApi extends runtime.BaseAPI {

    /**
     * Run Engine
     */
    async runEngineV1EngineRunGetRaw(requestParameters: RunEngineV1EngineRunGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InfoMessage>> {
        if (requestParameters['engineNamespace'] == null) {
            throw new runtime.RequiredError(
                'engineNamespace',
                'Required parameter "engineNamespace" was null or undefined when calling runEngineV1EngineRunGet().'
            );
        }

        if (requestParameters['xToken'] == null) {
            throw new runtime.RequiredError(
                'xToken',
                'Required parameter "xToken" was null or undefined when calling runEngineV1EngineRunGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['engineNamespace'] != null) {
            queryParameters['engine_namespace'] = requestParameters['engineNamespace'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['xToken'] != null) {
            headerParameters['x-token'] = String(requestParameters['xToken']);
        }

        const response = await this.request({
            path: `/v1/engine/run`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InfoMessageFromJSON(jsonValue));
    }

    /**
     * Run Engine
     */
    async runEngineV1EngineRunGet(requestParameters: RunEngineV1EngineRunGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InfoMessage> {
        const response = await this.runEngineV1EngineRunGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
